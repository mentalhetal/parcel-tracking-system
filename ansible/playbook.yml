- name: Deploy Backend
  hosts: backend
  become: true
  tasks:
    - name: Install Node.js and npm
      yum:
        name:
          - nodejs
          - npm
        state: present

    - name: Install PM2 globally
      npm:
        name: pm2
        global: yes

    - name: Kill all PM2 processes completely
      shell: |
        pm2 kill
      args:
        chdir: /home/ec2-user

    - name: Remove existing backend directory
      file:
        path: /home/ec2-user/backend
        state: absent

    - name: Upload backend archive to EC2
      copy:
        src: backend.tar.gz
        dest: /home/ec2-user/backend.tar.gz

    - name: Extract backend code on EC2
      shell: |
        mkdir -p /home/ec2-user/backend
        tar -xzf /home/ec2-user/backend.tar.gz -C /home/ec2-user/backend

    - name: Upload Firebase service key
      copy:
        src: firebase-service-key.json
        dest: /home/ec2-user/backend/firebase-service-key.json
        owner: ec2-user
        group: ec2-user
        mode: '0600'
        validate: 'python3 -m json.tool %s'

    - name: Install backend dependencies
      shell: npm ci
      args:
        chdir: /home/ec2-user/backend/

    - name: Start backend with PM2 (only if server.js exists)
      shell: |
        if [ -f server.js ]; then
          pm2 start server.js --name parcel-backend
          pm2 save
        else
          echo "❌ server.js not found"
          exit 1
        fi
      args:
        chdir: /home/ec2-user/backend/

    - name: Enable PM2 startup on reboot
      shell: |
        pm2 startup systemd -u ec2-user --hp /home/ec2-user
        pm2 save
      args:
        chdir: /home/ec2-user/backend/
      ignore_errors: yes

- name: Deploy Frontend (via nginx)
  hosts: frontend
  become: true
  tasks:
    - name: Install nginx
      yum:
        name: nginx
        state: present

    - name: Start and enable nginx
      service:
        name: nginx
        state: started
        enabled: true

    - name: Remove existing frontend directory completely
      file:
        path: /usr/share/nginx/html
        state: absent

    - name: Recreate html directory
      file:
        path: /usr/share/nginx/html
        state: directory

    - name: Upload frontend build archive to EC2
      copy:
        src: frontend-build.tar.gz
        dest: /home/ec2-user/frontend-build.tar.gz

    - name: Extract frontend build on EC2
      shell: |
        tar -xzf /home/ec2-user/frontend-build.tar.gz -C /usr/share/nginx/html

    - name: Remove default nginx config (if exists)
      file:
        path: /etc/nginx/conf.d/default.conf
        state: absent

    - name: Configure nginx for SPA (conf.d 방식)
      copy:
        src: ./spa.conf
        dest: /etc/nginx/conf.d/spa.conf
        owner: root
        group: root
        mode: 0644

    - name: Test nginx config before restart
      shell: nginx -t
      register: nginx_test
      failed_when: nginx_test.rc != 0
      ignore_errors: false

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
