name: Deploy via Ansible

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Test SSH to Bastion
        run: |
          nc -zv ${{ vars.BASTION_PUBLIC_IP }} 22 || echo "‚ùå Port 22 not reachable from GitHub Actions"

      - name: Set up Node.js for frontend build
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Create .env.production for frontend
        run: |
          cat <<EOF > frontend/.env.production
          REACT_APP_API_URL=https://dev.classpick.click/api
          EOF

      - name: Build React frontend
        working-directory: ./frontend
        run: |
          npm ci
          CI=false npm run build

      - name: Compress frontend build
        run: tar -czf frontend-build.tar.gz -C frontend/build .

      - name: Move frontend build archive into ansible folder
        run: mv frontend-build.tar.gz ansible/

      - name: Compress backend source
        run: tar -czf backend.tar.gz -C backend .

      - name: Move backend archive into ansible folder
        run: mv backend.tar.gz ansible/

      - name: Create firebase-service-key.json from secret
        run: |
          cat <<EOF > ansible/firebase-service-key.json
          ${{ secrets.FIREBASE_SERVICE_KEY_JSON }}
          EOF

      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          printf "%s" "${{ secrets.SSH_KEY }}" > ~/.ssh/seoul.key.pem
          chmod 600 ~/.ssh/seoul.key.pem
          ssh-keyscan -H ${{ vars.BASTION_PUBLIC_IP }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Generate Ansible inventory from repository variables
        run: |
          mkdir -p ansible/inventory
          cat <<EOF > ansible/inventory/hosts
          [backend]
          ${{ vars.BACKEND_PRIVATE_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/seoul.key.pem ansible_ssh_common_args='-o ProxyCommand="ssh -i ~/.ssh/seoul.key.pem -W %h:%p ec2-user@${{ vars.BASTION_PUBLIC_IP }}"'

          [frontend]
          ${{ vars.FRONTEND_PRIVATE_IP }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/seoul.key.pem ansible_ssh_common_args='-o ProxyCommand="ssh -i ~/.ssh/seoul.key.pem -W %h:%p ec2-user@${{ vars.BASTION_PUBLIC_IP }}"'
          EOF

      - name: Run Ansible Playbook
        run: |
          cd ansible
          ansible-playbook playbook.yml -i inventory
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
